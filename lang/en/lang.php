<?php

return [
    'all_types' => 'All types',
    'filter_by_type' => 'Filter by type?',
    'extension' => 'Extension',
    'result' => 'Result',
    'non_interactive_no_selection' => 'Non-interactive environment: no selection made.',
    'no_target_specified' => 'No target specified. Use {id} or --all or run interactively.',
    'success' => 'success',
    'failed' => 'failed',
    'switchable_pick_one' => 'Type is switchable. Pick one to enable',
    'extensions_discovered' => 'Extensions discovered.',
    'status_broken' => 'broken',
    'status_enabled' => 'enabled',
    'status_disabled' => 'disabled',
    'name' => 'Name',
    'id' => 'ID',
    'type' => 'Type',
    'status' => 'Status',
    'version' => 'Version',
    'no_extensions_filter' => 'No extensions found for the current filter.',
    'total' => 'Total: :count',
    'no_extensions_selection' => 'No extensions found for selection.',
    'select_delete' => 'Select extensions to delete (physical)',
    'no_selection' => 'No selection.',
    'nothing_to_delete' => 'Nothing to delete.',
    'confirm_delete' => 'Are you sure to delete selected extensions from disk?',
    'status_unknown' => 'unknown',
    'no_disabled_selection' => 'No disabled extensions found for selection.',
    'select_enable' => 'Select extensions to enable',
    'nothing_to_enable' => 'Nothing to enable.',
    'install_missing_packages' => "Install missing packages for ':id'?",
    'no_enabled_selection' => 'No enabled extensions found for selection.',
    'select_disable' => 'Select extensions to disable',
    'nothing_to_disable' => 'Nothing to disable.',
    'select_install_deps' => 'Select extensions to install dependencies for',
    'nothing_selected' => 'Nothing selected.',
    'status_installed' => 'installed',
    'deps' => 'Deps',
    'select_extension_type' => 'Select extension type',
    'invalid_type' => "Invalid type ':type'. Available: :available",
    'enter_extension_name' => 'Enter extension name',
    'name_required' => 'Name is required',
    'select_stub_groups' => 'Select stubs groups to generate',
    'failed_to_create_extension' => 'Failed to create extension: :error',
    'extension_created' => 'Extension :name created in namespace :namespace at :path',
    'generated_files' => 'Generated Files',
    'active_reloaded' => 'Active extensions reloaded.',
    'select_migrate' => 'Select extensions to migrate',
    'nothing_to_migrate' => 'Nothing to migrate.',
    'status_migrated' => 'migrated',
    'select_publish' => 'Select what to publish',
    'publish_all' => 'All: config + migrations + lang + stubs',
    'publish_config' => 'Only config',
    'publish_migrations' => 'Only migrations',
    'publish_lang' => 'Only lang',
    'publish_stubs' => 'Only stubs',
    'published_tag' => 'Published: :tag',
    'extension_not_found' => 'Extension not found',
    'extension_already_enabled' => 'Extension already enabled',
    'missing_dependencies' => 'Missing dependencies: :packages',
    'missing_extensions' => 'Missing required extensions: :extensions',
    'extension_enabled' => 'Extension enabled successfully',
    'enable_failed' => 'Enable operation failed: :error',
    'extension_already_disabled' => 'Extension already disabled',
    'extension_protected_disable' => 'Extension is protected and cannot be disabled',
    'extension_required_by' => 'Extension is required by: :extensions',
    'extension_disabled' => 'Extension disabled successfully',
    'disable_failed' => 'Disable operation failed: :error',
    'extension_no_composer' => 'Extension has no composer.json file - no dependencies to install',
    'extension_no_deps' => 'Extension has no dependencies to install',
    'deps_already_installed' => 'All dependencies are already installed',
    'deps_installed' => 'Dependencies installed successfully via composer-merge-plugin',
    'deps_install_failed_merge' => 'Failed to install dependencies via composer-merge-plugin',
    'deps_install_failed' => 'Dependencies install failed: :error',
    'extension_protected_delete' => 'Extension is protected and cannot be deleted',
    'failed_delete_directory' => 'Failed to delete extension directory',
    'extension_deleted' => 'Extension deleted successfully',
    'delete_failed' => 'Delete operation failed: :error',
    'provider_not_found' => 'Provider class not found',
    'extension_exists' => "Extension ':name' already exists at :path",
    'base_path_not_configured' => "Base path for type ':type' not configured",
    'stubs_path_invalid' => 'Stubs path is invalid: :path',
];
